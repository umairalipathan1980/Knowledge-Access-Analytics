apiVersion: apps/v1
kind: Deployment
metadata:
  name: knowledge-access-analytics
  labels:
    app: knowledge-access-analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: knowledge-access-analytics
  template:
    metadata:
      labels:
        app: knowledge-access-analytics
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: knowledge-access-analytics
        image: knowledge-access-analytics:latest
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: STREAMLIT_SERVER_PORT
          value: "8080"
        - name: STREAMLIT_SERVER_ADDRESS
          value: "0.0.0.0"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
              optional: true
        - name: AZURE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: azure-api-key
              optional: true
        - name: LANGCHAIN_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: langchain-api-key
              optional: true
        - name: TAVILY_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: tavily-api-key
              optional: true
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: groq-api-key
              optional: true
        resources:
          requests:
            memory: "4Gi"      # Request 4GB - within LimitRange constraints
            cpu: "1000m"       # Request 1 CPU core
          limits:
            memory: "8Gi"      # Limit to 8GB - well within 16Gi max
            cpu: "2000m"       # Limit to 2 CPU cores - within 4 CPU max
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 60        # Check every 60 seconds instead of 30
          timeoutSeconds: 30       # Allow 30 seconds for response instead of 10
          failureThreshold: 3      # Allow 3 failures before restart
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30        # Check every 30 seconds instead of 10  
          timeoutSeconds: 15       # Allow 15 seconds for response instead of 5
          failureThreshold: 3      # Allow 3 failures before marking unhealthy
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: data-volume
          mountPath: /opt/app-root/src/data
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: knowledge-base-storage